@mixin uppercase-title {
  color: $yellow;
  text-transform: uppercase;
  font-family: $bebasNeue;
  font-weight: normal;
}

@mixin normal-text($font-style) {
  color: $white;
  font-family: $verdana;
  font-style: $font-style;
}

@mixin uppercase-text($font-size, $font-style) {
  color: $yellow;
  font-size: $font-size;
  text-transform: uppercase;
  font-family: $verdana;
  font-weight: bold;
  font-style: $font-style;
}

@mixin background-parallax {
  @include background-size(cover);
  background-attachment: scroll;
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: alpha(opacity=$opacity-ie);
}

/* mixin background image default */
@mixin bg-svg($image-name) {
  background-image: url("../images/svg/#{$image-name}");
}

/* Multi background */
@mixin bg-texture($image-name) {
  background-image: url("../images/svg/#{$image-name}");
  background-repeat:  repeat;
  background-color: $dark-gray-background;
}

/*mixin responsive background*/
@mixin bg-soldier($image-name) {

  @media screen and (min-width: 481px) and (max-width: 640px) {
    background-image: url("../images/640/#{$image-name}");
  }
  @media screen and (min-width: 641px) and (max-width: 768px) {
    background-image: url("../images/768/#{$image-name}");
  }

  @media screen and (min-width: 769px) and (max-width: 960px) {
    background-image: url("../images/960/#{$image-name}");
  }

  @media screen and (min-width: 961px) and (max-width: 1280px) {
    background-image: url("../images/1280/#{$image-name}");
  }

  @media screen and (min-width: 1281px) {
    background-image: url("../images/1920/#{$image-name}");
  }
}

/*mixin gear-border background*/
@mixin image($image-name) {

  @media screen and (min-width: 641px) and (max-width: 768px) {
    background-image: url("../images/768/#{$image-name}");
  }

  @media screen and (min-width: 769px) and (max-width: 960px) {
    background-image: url("../images/960/#{$image-name}");
  }

  @media screen and (min-width: 961px) and (max-width: 1280px) {
    background-image: url("../images/1280/#{$image-name}");
  }

  @media screen and (min-width: 1281px) {
    background-image: url("../images/1920/#{$image-name}");
  }
}

/*mixin responsive background*/
@mixin bg-responsive($image-name) {

  @media screen and (max-width: 480px) {
    background-image: url("../images/480/#{$image-name}");
  }

  @media screen and (min-width: 481px) and (max-width: 640px) {
    background-image: url("../images/640/#{$image-name}");
  }
  @media screen and (min-width: 641px) and (max-width: 768px) {
    background-image: url("../images/768/#{$image-name}");
  }

  @media screen and (min-width: 769px) and (max-width: 960px) {
    background-image: url("../images/960/#{$image-name}");
  }

  @media screen and (min-width: 961px) and (max-width: 1280px) {
    background-image: url("../images/1280/#{$image-name}");
  }

  @media screen and (min-width: 1281px) {
    background-image: url("../images/1920/#{$image-name}");
  }
}

/*-------------------- animation -----------------------------*/
@mixin animation-gear {
  @include animation-timing-function(linear);
  @include animation-iteration-count(infinite);
  @include animation-direction(normal);
  @include animation-delay(0);
  @include animation-play-state(running);
  @include animation-fill-mode(forwards)
}

/*---------------------- keyframes ---------------------------*/
@include keyframes(Clockwise) {
  0% {
    transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@include keyframes(UndoClockwise) {
  0% {
    transform: rotate(360deg);
    transform: rotate(360deg);
  }
  100% {
    transform: rotate(0deg);
    transform: rotate(0deg);
  }
}

@include keyframes(spaceboots) {
  0%   { transform: translate(2px, 1px)   rotate(0deg); }
  10%  { transform: translate(-1px, -2px) rotate(-1deg); }
  20%  { transform: translate(-3px, 0px)  rotate(1deg); }
  30%  { transform: translate(0px, 2px)   rotate(0deg); }
  40%  { transform: translate(1px, -1px)  rotate(1deg); }
  50%  { transform: translate(-1px, 1px)  rotate(-1deg); }
  60%  { transform: translate(-3px, -2px)  rotate(0deg); }
  70%  { transform: translate(2px, 1px)   rotate(-1deg); }
  80%  { transform: translate(-1px, -2px) rotate(1deg); }
  90%  { transform: translate(2px, -1px)   rotate(0deg); }
  100% { transform: translate(1px, -2px)  rotate(-1deg); }
}

@include keyframes(rotate) {
  0% { transform: rotate(0deg); }
  17% { transform: rotate(10deg); }
  34% { transform: rotate(-10deg); }
  51% { transform: rotate(6deg); }
  68% { transform: rotate(-6deg); }
  85% { transform: rotate(3deg); }
  100% { transform: rotate(0deg); }
}
